{"ast":null,"code":"var _jsxFileName = \"/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [error, setError] = React.useState(false);\n  const [response, setResponse] = React.useState([]);\n\n  async function fetchData() {\n    try {\n      const guilds = ['TIK', 'AK', 'Athene', 'AS', 'IK', 'Inkubio', 'KIK', 'MK', 'PJK', 'PT', 'TF', 'VK'];\n      await Promise.all([await fetch(\"/events\", {\n        method: 'POST',\n        body: JSON.stringify({\n          guildNames: guilds,\n          startDateTimeFrame: new Date(),\n          endDateTimeFrame: getNext4MonthsEvents()\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(res => res.json()).then(data => {\n        var dataString = JSON.stringify(data.response);\n        var result = JSON.parse(dataString);\n        setResponse(result);\n      })]);\n    } catch (error) {\n      console.log(error);\n      setError(true);\n    }\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n  React.useEffect(() => {}, [response]);\n\n  function getNext4MonthsEvents() {\n    var date = new Date();\n    date.setMonth(date.getMonth() + 4);\n    return date.toISOString();\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Oops.. something went wrong! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: response.length > 0 && response.map(list => /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridDay\",\n      contentHeight: \"auto\",\n      validRange: {\n        start: new Date(),\n        end: getNext4MonthsEvents()\n      } //TODO need to add a unique key\n      //dayHeaders={false}\n      ,\n      dayHeaderContent: \"Name\",\n      dayHeaderClassNames: \"guild-name\",\n      slotMinTime: \"08:00:00\",\n      slotMaxTime: \"24:00:00\",\n      events: list,\n      eventColor: \"#CF9FFF\",\n      nowIndicator: true,\n      dateClick: e => console.log(e.dateStr),\n      eventClick: e => console.log(e.event.id),\n      timeZone: \"Europe/Helsinki\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"kwBGBUS5QCNLfffIJ8t9G2OX4bY=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Home","error","setError","useState","response","setResponse","fetchData","guilds","Promise","all","fetch","method","body","JSON","stringify","guildNames","startDateTimeFrame","Date","endDateTimeFrame","getNext4MonthsEvents","headers","then","res","json","data","dataString","result","parse","console","log","useEffect","date","setMonth","getMonth","toISOString","length","map","list","start","end","e","dateStr","event","id"],"sources":["/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js"],"sourcesContent":["import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nconst Home = () => {\n\n  const [error, setError] = React.useState(false);\n  const [response, setResponse] = React.useState([]);\n  async function fetchData() {\n    try {\n      const guilds = ['TIK', 'AK', 'Athene', 'AS', 'IK', 'Inkubio', 'KIK', 'MK', 'PJK', 'PT', 'TF', 'VK'];\n      await Promise.all([\n       (\n         await fetch(\"/events\", {\n          method: 'POST',\n          body: JSON.stringify({\n            guildNames: guilds,\n            startDateTimeFrame : new Date(),\n            endDateTimeFrame : getNext4MonthsEvents()\n          }),\n          headers: {'Content-type': 'application/json; charset=UTF-8'},\n        }).then((res) => res.json())\n        .then((data) => {\n          var dataString = JSON.stringify(data.response);\n          var result = JSON.parse(dataString);       \n          setResponse(result);\n        }))\n     ]);\n   } catch (error) {\n     console.log(error);\n     setError(true);\n   }\n }\n \n React.useEffect(() => {\n   fetchData();\n }, []);\n \n React.useEffect(() => {\n }, [response]);\n\n function getNext4MonthsEvents(){\n  var date = new Date();\n  date.setMonth(date.getMonth() + 4);\n  return date.toISOString();\n}\n\n if(error) {\n  return (\n  <h1> Oops.. something went wrong! </h1>\n  )\n}\n\nreturn (  \n  <div className='container'>\n    {response.length > 0 && response.map((list) => (\n      \n     <FullCalendar     \n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"timeGridDay\"\n        contentHeight={\"auto\"}\n        validRange={{\n        start: new Date(),\n        end: getNext4MonthsEvents()\n        }}\n        //TODO need to add a unique key\n        \n        //dayHeaders={false}\n        dayHeaderContent={\"Name\"}\n        dayHeaderClassNames={\"guild-name\"}\n        slotMinTime={\"08:00:00\"}\n        slotMaxTime={\"24:00:00\"}\n    \n        events={list}\n        eventColor=\"#CF9FFF\"\n        nowIndicator\n        dateClick={(e) => console.log(e.dateStr)}\n        eventClick={(e) => console.log(e.event.id)}\n        timeZone=\"Europe/Helsinki\"\n      />\n    \n    ))}\n    </div>      \n  );\n\n\n\n};\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}