{"ast":null,"code":"var _jsxFileName = \"/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { useFetch, getNext4MonthsEvents } from '../hooks/useFetch';\nimport { Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [data, isLoading] = useFetch();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this);\n  }\n\n  const guildCalendars = data.map(list => /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: \"timeGridDay\",\n    contentHeight: \"auto\",\n    validRange: {\n      start: new Date(),\n      end: getNext4MonthsEvents()\n    } //dayHeaders={false}\n    ,\n    dayHeaderContent: \"TEST\",\n    dayHeaderClassNames: \"guild-name\",\n    slotMinTime: \"08:00:00\",\n    slotMaxTime: \"24:00:00\",\n    events: list,\n    eventColor: \"#CF9FFF\",\n    nowIndicator: true,\n    dateClick: e => console.log(e.dateStr),\n    eventClick: e => console.log(e.event.id),\n    timeZone: \"Europe/Helsinki\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: guildCalendars\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"NmgInhJWaAKMjGOtESybr3nPkRU=\", false, function () {\n  return [useFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","useFetch","getNext4MonthsEvents","Spinner","Home","data","isLoading","guildCalendars","map","list","start","Date","end","e","console","log","dateStr","event","id"],"sources":["/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js"],"sourcesContent":["import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport {useFetch, getNext4MonthsEvents} from '../hooks/useFetch';\nimport { Spinner } from 'react-bootstrap';\n\nconst Home = () => {\n\n  const [data, isLoading] = useFetch();\n  if(isLoading) {\n    return (\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n    )\n  }\n    const guildCalendars = data.map((list)=>\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"timeGridDay\"\n        contentHeight={\"auto\"}\n        validRange={{\n        start: new Date(),\n        end: getNext4MonthsEvents()\n        }}\n        //dayHeaders={false}\n        dayHeaderContent={\"TEST\"}\n        dayHeaderClassNames={\"guild-name\"}\n        slotMinTime={\"08:00:00\"}\n        slotMaxTime={\"24:00:00\"}\n    \n       events={list}\n        eventColor=\"#CF9FFF\"\n        nowIndicator\n        dateClick={(e) => console.log(e.dateStr)}\n        eventClick={(e) => console.log(e.event.id)}\n        timeZone=\"Europe/Helsinki\"\n    />\n    );\n\n  return (\n    <div className='container'>\n      {guildCalendars}\n    </div>\n      \n    );\n};\n\nexport default Home;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAAQC,QAAR,EAAkBC,oBAAlB,QAA6C,mBAA7C;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAM,CAACC,IAAD,EAAOC,SAAP,IAAoBL,QAAQ,EAAlC;;EACA,IAAGK,SAAH,EAAc;IACZ,oBACA,QAAC,OAAD;MAAS,SAAS,EAAC,QAAnB;MAA4B,IAAI,EAAC,QAAjC;MAAA,uBACE;QAAM,SAAS,EAAC,iBAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADA;EAKD;;EACC,MAAMC,cAAc,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,iBAC9B,QAAC,YAAD;IACE,OAAO,EAAE,CAACX,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CADX;IAEE,WAAW,EAAC,aAFd;IAGE,aAAa,EAAE,MAHjB;IAIE,UAAU,EAAE;MACZU,KAAK,EAAE,IAAIC,IAAJ,EADK;MAEZC,GAAG,EAAEV,oBAAoB;IAFb,CAJd,CAQE;IARF;IASE,gBAAgB,EAAE,MATpB;IAUE,mBAAmB,EAAE,YAVvB;IAWE,WAAW,EAAE,UAXf;IAYE,WAAW,EAAE,UAZf;IAcC,MAAM,EAAEO,IAdT;IAeE,UAAU,EAAC,SAfb;IAgBE,YAAY,MAhBd;IAiBE,SAAS,EAAGI,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd,CAjBpB;IAkBE,UAAU,EAAGH,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACI,KAAF,CAAQC,EAApB,CAlBrB;IAmBE,QAAQ,EAAC;EAnBX;IAAA;IAAA;IAAA;EAAA,QADqB,CAAvB;EAwBF,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACGX;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAxCD;;GAAMH,I;UAEsBH,Q;;;KAFtBG,I;AA0CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}