{"ast":null,"code":"var _jsxFileName = \"/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport useFetch from '../hooks/useFetch';\nimport { Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [events, isLoading] = useFetch(`${Config.apiUrl}/wp-json/menus/v1/menus/main-nav`);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  /*const guildCalendars = data.map((list)=>\n      <FullCalendar\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      initialView=\"timeGridDay\"\n      contentHeight={\"auto\"}\n      validRange={{\n      start: new Date(),\n      end: getNext4MonthsEvents()\n      }}\n      //dayHeaders={false}\n      dayHeaderContent={\"TEST\"}\n      dayHeaderClassNames={\"guild-name\"}\n      slotMinTime={\"08:00:00\"}\n      slotMaxTime={\"24:00:00\"}\n  \n      /*headerToolbar={{\n      center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n      }}*/\n\n  /*customButtons={{\n  new: {\n      text: 'new',\n      click: () => console.log('new event'),\n  },\n  }}*/\n\n  /*  events={list}\n    eventColor=\"#CF9FFF\"\n    nowIndicator\n    dateClick={(e) => console.log(e.dateStr)}\n    eventClick={(e) => console.log(e.event.id)}\n    timeZone=\"Europe/Helsinki\"\n  />\n  );*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridDay\",\n      contentHeight: \"auto\",\n      validRange: {\n        start: new Date(),\n        end: getNext4MonthsEvents()\n      } //dayHeaders={false}\n      ,\n      dayHeaderContent: \"TEST\",\n      dayHeaderClassNames: \"guild-name\",\n      slotMinTime: \"08:00:00\",\n      slotMaxTime: \"24:00:00\"\n      /*headerToolbar={{\n      center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n      }}*/\n\n      /*customButtons={{\n      new: {\n          text: 'new',\n          click: () => console.log('new event'),\n      },\n      }}*/\n      ,\n      events: data,\n      eventColor: \"#CF9FFF\",\n      nowIndicator: true,\n      dateClick: e => console.log(e.dateStr),\n      eventClick: e => console.log(e.event.id),\n      timeZone: \"Europe/Helsinki\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"9dFedAKpi9v8XKdZ8ujqDJ8ZyXU=\", false, function () {\n  return [useFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","useFetch","Spinner","Home","events","isLoading","Config","apiUrl","start","Date","end","getNext4MonthsEvents","data","e","console","log","dateStr","event","id"],"sources":["/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js"],"sourcesContent":["import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport useFetch from '../hooks/useFetch';\nimport { Spinner } from 'react-bootstrap';\n\nconst Home = () => {\n\n  const [events, isLoading] = useFetch(`${Config.apiUrl}/wp-json/menus/v1/menus/main-nav`);\n\n  if(isLoading) {\n    return <Spinner/>\n  }\n\n\n    /*const guildCalendars = data.map((list)=>\n        <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"timeGridDay\"\n        contentHeight={\"auto\"}\n        validRange={{\n        start: new Date(),\n        end: getNext4MonthsEvents()\n        }}\n        //dayHeaders={false}\n        dayHeaderContent={\"TEST\"}\n        dayHeaderClassNames={\"guild-name\"}\n        slotMinTime={\"08:00:00\"}\n        slotMaxTime={\"24:00:00\"}\n    \n        /*headerToolbar={{\n        center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n        }}*/\n        /*customButtons={{\n        new: {\n            text: 'new',\n            click: () => console.log('new event'),\n        },\n        }}*/\n      /*  events={list}\n        eventColor=\"#CF9FFF\"\n        nowIndicator\n        dateClick={(e) => console.log(e.dateStr)}\n        eventClick={(e) => console.log(e.event.id)}\n        timeZone=\"Europe/Helsinki\"\n    />\n    );*/\n\n    \n  \n\n  return (\n    <div className='container'>\n       <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"timeGridDay\"\n        contentHeight={\"auto\"}\n        validRange={{\n        start: new Date(),\n        end: getNext4MonthsEvents()\n        }}\n        //dayHeaders={false}\n        dayHeaderContent={\"TEST\"}\n        dayHeaderClassNames={\"guild-name\"}\n        slotMinTime={\"08:00:00\"}\n        slotMaxTime={\"24:00:00\"}\n    \n        /*headerToolbar={{\n        center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n        }}*/\n        /*customButtons={{\n        new: {\n            text: 'new',\n            click: () => console.log('new event'),\n        },\n        }}*/\n        events={data}\n        eventColor=\"#CF9FFF\"\n        nowIndicator\n        dateClick={(e) => console.log(e.dateStr)}\n        eventClick={(e) => console.log(e.event.id)}\n        timeZone=\"Europe/Helsinki\"\n    />\n    </div>\n      \n    );\n};\n\nexport default Home;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAE,GAAEK,MAAM,CAACC,MAAO,kCAAlB,CAApC;;EAEA,IAAGF,SAAH,EAAc;IACZ,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;EAGC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACQ;AACR;AACA;AACA;AACA;AACA;;EACM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;EAKE,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACG,QAAC,YAAD;MACC,OAAO,EAAE,CAACP,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CADV;MAEC,WAAW,EAAC,aAFb;MAGC,aAAa,EAAE,MAHhB;MAIC,UAAU,EAAE;QACZQ,KAAK,EAAE,IAAIC,IAAJ,EADK;QAEZC,GAAG,EAAEC,oBAAoB;MAFb,CAJb,CAQC;MARD;MASC,gBAAgB,EAAE,MATnB;MAUC,mBAAmB,EAAE,YAVtB;MAWC,WAAW,EAAE,UAXd;MAYC,WAAW,EAAE;MAEb;AACR;AACA;;MACQ;AACR;AACA;AACA;AACA;AACA;MAtBO;MAuBC,MAAM,EAAEC,IAvBT;MAwBC,UAAU,EAAC,SAxBZ;MAyBC,YAAY,MAzBb;MA0BC,SAAS,EAAGC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd,CA1BnB;MA2BC,UAAU,EAAGH,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACI,KAAF,CAAQC,EAApB,CA3BpB;MA4BC,QAAQ,EAAC;IA5BV;MAAA;MAAA;MAAA;IAAA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CAhFD;;GAAMf,I;UAEwBF,Q;;;KAFxBE,I;AAkFN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}