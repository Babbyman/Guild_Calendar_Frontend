{"ast":null,"code":"var _jsxFileName = \"/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const guild = \"TF\";\n  const guilds = ['TIK', 'AK', 'Athene', 'AS', 'IK', 'Inkubio', 'KIK', 'MK', 'PJK', 'PT', 'TF', 'VK', 'Prodeko', 'FK'];\n  const listOfLists = [[{\n    title: 'Hupsans',\n    start: '2022-10-10T15:00:00Z',\n    end: '2022-10-10T16:30:00Z',\n    guild: 'TF'\n  }, {\n    title: 'Höpsyn',\n    start: '2022-10-10T17:00:00Z',\n    end: '2022-10-10T18:30:00Z',\n    guild: 'TF'\n  }], [{\n    title: 'Lirum',\n    start: '2022-10-10T15:00:00Z',\n    end: '2022-10-10T16:30:00Z',\n    guild: 'TIK'\n  }, {\n    title: 'Larum',\n    start: '2022-10-10T17:00:00Z',\n    end: '2022-10-10T18:30:00Z',\n    guild: 'TIK'\n  }]];\n  const guildCalendars = listOfLists.map(list => /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: \"timeGridDay\",\n    contentHeight: \"auto\",\n    validRange: {\n      start: new Date(),\n      end: getNext4MonthsEvents()\n    } //dayHeaders={false}\n    ,\n    dayHeaderContent: list[0].guild,\n    dayHeaderClassNames: \"guild-name\",\n    slotMinTime: \"08:00:00\",\n    slotMaxTime: \"24:00:00\"\n    /*headerToolbar={{\n    center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n    }}*/\n\n    /*customButtons={{\n    new: {\n        text: 'new',\n        click: () => console.log('new event'),\n    },\n    }}*/\n    ,\n    events: list,\n    eventColor: \"#CF9FFF\",\n    nowIndicator: true,\n    dateClick: e => console.log(e.dateStr),\n    eventClick: e => console.log(e.event.id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this));\n  React.useEffect(() => {\n    fetch(\"/events\", {\n      method: 'POST',\n      body: JSON.stringify({\n        guildName: guild,\n        startDateTimeFrame: new Date(),\n        endDateTimeFrame: getNext4MonthsEvents()\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(res => res.json()).then(data => {\n      var dataString = JSON.stringify(data.response);\n      var result = JSON.parse(dataString);\n      console.log(\"result \", result);\n      setData(result);\n    });\n  }, []);\n\n  function getNext4MonthsEvents() {\n    var date = new Date();\n    date.setMonth(date.getMonth() + 4);\n    console.log(\"next4Month.toISOString()\", date.toISOString());\n    return date.toISOString();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: guildCalendars\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Home","data","setData","useState","guild","guilds","listOfLists","title","start","end","guildCalendars","map","list","Date","getNext4MonthsEvents","e","console","log","dateStr","event","id","useEffect","fetch","method","body","JSON","stringify","guildName","startDateTimeFrame","endDateTimeFrame","headers","then","res","json","dataString","response","result","parse","date","setMonth","getMonth","toISOString"],"sources":["/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js"],"sourcesContent":["import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nconst Home = () => {\n\n    const [data, setData] = React.useState(null);\n    const guild = \"TF\";\n    const guilds = ['TIK', 'AK', 'Athene', 'AS', 'IK', 'Inkubio', 'KIK', 'MK', 'PJK', 'PT', 'TF', 'VK', 'Prodeko', 'FK' ];\n    const listOfLists = [[ \n        {title: 'Hupsans', start: '2022-10-10T15:00:00Z', end: '2022-10-10T16:30:00Z', guild: 'TF'},  \n        {title: 'Höpsyn', start: '2022-10-10T17:00:00Z', end: '2022-10-10T18:30:00Z', guild: 'TF'}],\n        [{title: 'Lirum', start: '2022-10-10T15:00:00Z', end: '2022-10-10T16:30:00Z', guild: 'TIK'},  \n        {title: 'Larum', start: '2022-10-10T17:00:00Z', end: '2022-10-10T18:30:00Z', guild: 'TIK'}]];\n\n    const guildCalendars = listOfLists.map((list)=>\n        <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"timeGridDay\"\n        contentHeight={\"auto\"}\n        validRange={{\n        start: new Date(),\n        end: getNext4MonthsEvents()\n        }}\n        //dayHeaders={false}\n        dayHeaderContent={list[0].guild}\n        dayHeaderClassNames={\"guild-name\"}\n        slotMinTime={\"08:00:00\"}\n        slotMaxTime={\"24:00:00\"}\n    \n        /*headerToolbar={{\n        center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n        }}*/\n        /*customButtons={{\n        new: {\n            text: 'new',\n            click: () => console.log('new event'),\n        },\n        }}*/\n        events={list}\n        eventColor=\"#CF9FFF\"\n        nowIndicator\n        dateClick={(e) => console.log(e.dateStr)}\n        eventClick={(e) => console.log(e.event.id)}\n    />\n    );\n\n    React.useEffect(() => {\n      fetch(\"/events\", {\n        method: 'POST',\n        body: JSON.stringify({\n          guildName: guild,\n          startDateTimeFrame : new Date(),\n          endDateTimeFrame : getNext4MonthsEvents()\n        }),\n        headers: {'Content-type': 'application/json; charset=UTF-8'},\n      })\n        .then((res) => res.json())\n        .then((data) => {\n  \n          var dataString = JSON.stringify(data.response);\n          var result = JSON.parse(dataString);\n          console.log(\"result \", result);\n          setData(result)\n        });\n    }, []);\n\n    function getNext4MonthsEvents(){\n      var date = new Date();\n      date.setMonth(date.getMonth() + 4);\n      console.log(\"next4Month.toISOString()\" , date.toISOString());\n      return date.toISOString();\n    }\n  \n\n  return (\n    <div className='container'>\n        {guildCalendars}\n    </div>\n      \n    );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}