{"ast":null,"code":"var _jsxFileName = \"/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    fetch(\"/events\", {\n      method: 'POST',\n      body: JSON.stringify({\n        startDateTimeFrame: '2022-10-04T00:00:00Z',\n        endDateTimeFrame: '2022-10-08T00:00:00Z'\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(res => res.json()).then(data => {\n      var dataString = JSON.stringify(data.response);\n      var result = JSON.parse(dataString); //console.log(\"data \", JSON.stringify(data.response));\n\n      console.log(\"result \", result);\n      setData(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridDay\",\n      contentHeight: \"auto\" //dayHeaders={false}\n      ,\n      dayHeaderContent: \"Guild 1\",\n      dayHeaderClassNames: \"guild-name\",\n      slotMinTime: \"08:00:00\",\n      slotMaxTime: \"24:00:00\"\n      /*headerToolbar={{\n        center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n      }}*/\n\n      /*customButtons={{\n        new: {\n          text: 'new',\n          click: () => console.log('new event'),\n        },\n      }}*/\n      ,\n      events: data,\n      eventColor: \"#CF9FFF\",\n      nowIndicator: true,\n      dateClick: e => console.log(e.dateStr),\n      eventClick: e => console.log(e.event.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridDay\",\n      contentHeight: \"auto\",\n      dayHeaderContent: \"Guild 2\",\n      dayHeaderClassNames: \"guild-name\",\n      slotMinTime: \"08:00:00\",\n      slotMaxTime: \"24:00:00\"\n      /*headerToolbar={{\n        center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n      }}*/\n\n      /*customButtons={{\n        new: {\n          text: 'new',\n          click: () => console.log('new event'),\n        },\n      }}*/\n      ,\n      events: data,\n      eventColor: \"#CF9FFF\",\n      nowIndicator: true,\n      dateClick: e => console.log(e.dateStr),\n      eventClick: e => console.log(e.event.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Home","data","setData","useState","useEffect","fetch","method","body","JSON","stringify","startDateTimeFrame","endDateTimeFrame","headers","then","res","json","dataString","response","result","parse","console","log","e","dateStr","event","id"],"sources":["/Users/noora/Development/amplifyapp/ReactApp/src/pages/home.js"],"sourcesContent":["import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nconst Home = () => {\n\n    const [data, setData] = React.useState(null);\n\n    React.useEffect(() => {\n      fetch(\"/events\", {\n        method: 'POST',\n        body: JSON.stringify({\n          startDateTimeFrame : '2022-10-04T00:00:00Z',\n          endDateTimeFrame : '2022-10-08T00:00:00Z'\n        }),\n        headers: {'Content-type': 'application/json; charset=UTF-8'},\n      })\n        .then((res) => res.json())\n        .then((data) => {\n  \n          var dataString = JSON.stringify(data.response);\n          var result = JSON.parse(dataString);\n          //console.log(\"data \", JSON.stringify(data.response));\n          console.log(\"result \", result);\n          setData(result)\n        });\n    }, []);\n\n  return (\n    <div className='container'>\n    <FullCalendar\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      initialView=\"timeGridDay\"\n      contentHeight={\"auto\"}\n      //dayHeaders={false}\n      dayHeaderContent={\"Guild 1\"}\n      dayHeaderClassNames={\"guild-name\"}\n      slotMinTime={\"08:00:00\"}\n      slotMaxTime={\"24:00:00\"}\n     \n      /*headerToolbar={{\n        center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n      }}*/\n      /*customButtons={{\n        new: {\n          text: 'new',\n          click: () => console.log('new event'),\n        },\n      }}*/\n      events={data}\n      eventColor=\"#CF9FFF\"\n      nowIndicator\n      dateClick={(e) => console.log(e.dateStr)}\n      eventClick={(e) => console.log(e.event.id)}\n    />\n    <FullCalendar\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      initialView=\"timeGridDay\"\n      contentHeight={\"auto\"}\n      dayHeaderContent={\"Guild 2\"}\n      dayHeaderClassNames={\"guild-name\"}\n      slotMinTime={\"08:00:00\"}\n      slotMaxTime={\"24:00:00\"}\n      /*headerToolbar={{\n        center: 'dayGridMonth,timeGridWeek,timeGridDay new',\n      }}*/\n      /*customButtons={{\n        new: {\n          text: 'new',\n          click: () => console.log('new event'),\n        },\n      }}*/\n      events={data}\n      eventColor=\"#CF9FFF\"\n      nowIndicator\n      dateClick={(e) => console.log(e.dateStr)}\n      eventClick={(e) => console.log(e.event.id)}\n    />\n    </div>\n      \n    );\n};\n\nexport default Home;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAxB;EAEAR,KAAK,CAACS,SAAN,CAAgB,MAAM;IACpBC,KAAK,CAAC,SAAD,EAAY;MACfC,MAAM,EAAE,MADO;MAEfC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,kBAAkB,EAAG,sBADF;QAEnBC,gBAAgB,EAAG;MAFA,CAAf,CAFS;MAMfC,OAAO,EAAE;QAAC,gBAAgB;MAAjB;IANM,CAAZ,CAAL,CAQGC,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CASSZ,IAAD,IAAU;MAEd,IAAIe,UAAU,GAAGR,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACgB,QAApB,CAAjB;MACA,IAAIC,MAAM,GAAGV,IAAI,CAACW,KAAL,CAAWH,UAAX,CAAb,CAHc,CAId;;MACAI,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;MACAhB,OAAO,CAACgB,MAAD,CAAP;IACD,CAhBH;EAiBD,CAlBD,EAkBG,EAlBH;EAoBF,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACA,QAAC,YAAD;MACE,OAAO,EAAE,CAACrB,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CADX;MAEE,WAAW,EAAC,aAFd;MAGE,aAAa,EAAE,MAHjB,CAIE;MAJF;MAKE,gBAAgB,EAAE,SALpB;MAME,mBAAmB,EAAE,YANvB;MAOE,WAAW,EAAE,UAPf;MAQE,WAAW,EAAE;MAEb;AACN;AACA;;MACM;AACN;AACA;AACA;AACA;AACA;MAlBI;MAmBE,MAAM,EAAEE,IAnBV;MAoBE,UAAU,EAAC,SApBb;MAqBE,YAAY,MArBd;MAsBE,SAAS,EAAGqB,CAAD,IAAOF,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACC,OAAd,CAtBpB;MAuBE,UAAU,EAAGD,CAAD,IAAOF,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACE,KAAF,CAAQC,EAApB;IAvBrB;MAAA;MAAA;MAAA;IAAA,QADA,eA0BA,QAAC,YAAD;MACE,OAAO,EAAE,CAAC5B,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CADX;MAEE,WAAW,EAAC,aAFd;MAGE,aAAa,EAAE,MAHjB;MAIE,gBAAgB,EAAE,SAJpB;MAKE,mBAAmB,EAAE,YALvB;MAME,WAAW,EAAE,UANf;MAOE,WAAW,EAAE;MACb;AACN;AACA;;MACM;AACN;AACA;AACA;AACA;AACA;MAhBI;MAiBE,MAAM,EAAEE,IAjBV;MAkBE,UAAU,EAAC,SAlBb;MAmBE,YAAY,MAnBd;MAoBE,SAAS,EAAGqB,CAAD,IAAOF,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACC,OAAd,CApBpB;MAqBE,UAAU,EAAGD,CAAD,IAAOF,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACE,KAAF,CAAQC,EAApB;IArBrB;MAAA;MAAA;MAAA;IAAA,QA1BA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqDD,CA7ED;;GAAMzB,I;;KAAAA,I;AA+EN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}